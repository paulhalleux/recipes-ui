/* tslint:disable */
/* eslint-disable */
/**
 * Recipes.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResourceType } from './ResourceType';
import {
    ResourceTypeFromJSON,
    ResourceTypeFromJSONTyped,
    ResourceTypeToJSON,
    ResourceTypeToJSONTyped,
} from './ResourceType';

/**
 * 
 * @export
 * @interface Resource
 */
export interface Resource {
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    readonly id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Resource
     */
    readonly deleted?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    readonly name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    readonly path?: string | null;
    /**
     * 
     * @type {ResourceType}
     * @memberof Resource
     */
    type?: ResourceType;
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    readonly contentType?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Resource
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Resource
     */
    lastModified?: Date;
}



/**
 * Check if a given object implements the Resource interface.
 */
export function instanceOfResource(value: object): value is Resource {
    return true;
}

export function ResourceFromJSON(json: any): Resource {
    return ResourceFromJSONTyped(json, false);
}

export function ResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Resource {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'deleted': json['deleted'] == null ? undefined : json['deleted'],
        'name': json['name'] == null ? undefined : json['name'],
        'path': json['path'] == null ? undefined : json['path'],
        'type': json['type'] == null ? undefined : ResourceTypeFromJSON(json['type']),
        'contentType': json['contentType'] == null ? undefined : json['contentType'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'lastModified': json['lastModified'] == null ? undefined : (new Date(json['lastModified'])),
    };
}

  export function ResourceToJSON(json: any): Resource {
      return ResourceToJSONTyped(json, false);
  }

  export function ResourceToJSONTyped(value?: Omit<Resource, 'id'|'deleted'|'name'|'path'|'contentType'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': ResourceTypeToJSON(value['type']),
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'lastModified': value['lastModified'] == null ? undefined : ((value['lastModified']).toISOString()),
    };
}

